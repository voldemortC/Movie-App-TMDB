{"ast":null,"code":"var _jsxFileName = \"/home/digimantra/My space/udemy-react/APIcall/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  async function fetchMovies() {\n    setIsLoading(true);\n    // fetch(`https://swapi.py4e.com/api/films/`).then(res => res.json()).then((data)=>{\n    // const transformedData = data.results.map((movieData) => {\n    //   return{\n    //     id : movieData.episode_id,\n    //     title: movieData.title,\n    //     openingText: movieData.opening_crawl,\n    //     releaseDate: movieData.release_date,\n    //   }\n    // })\n    //     setMovies(transformedData);\n    //   });\n    //   setIsLoading(false);\n\n    try {} catch (error) {}\n    const response = await fetch(`https://swapi.py4e.com/api/films/`);\n    console.log(response, \"data\");\n    if (!response.ok) {\n      throw new Error('Something went wrong!');\n    }\n    let data = await response.json();\n    const transformedData = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedData);\n    setIsLoading(false);\n  }\n  // let movieList;\n  // if(!isLoading && movies.length > 0){\n  //   movieList = <MoviesList movies={movies} />\n  // } \n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 47\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5h7nYUBXvpZvHU3BYEQGBCrqFB0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","response","fetch","console","log","ok","Error","data","json","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/digimantra/My space/udemy-react/APIcall/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  \n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  async function fetchMovies(){\n    setIsLoading(true);\n    // fetch(`https://swapi.py4e.com/api/films/`).then(res => res.json()).then((data)=>{\n        // const transformedData = data.results.map((movieData) => {\n        //   return{\n        //     id : movieData.episode_id,\n        //     title: movieData.title,\n        //     openingText: movieData.opening_crawl,\n        //     releaseDate: movieData.release_date,\n        //   }\n        // })\n    //     setMovies(transformedData);\n    //   });\n    //   setIsLoading(false);\n      \n      try {\n\n      } catch(error) {\n\n      }\n      const response =  await fetch(`https://swapi.py4e.com/api/films/`);\n      console.log(response, \"data\");\n    \n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n\n      let data = await response.json();\n        const transformedData = data.results.map((movieData) => {\n            return{\n              id : movieData.episode_id,\n              title: movieData.title,\n              openingText: movieData.opening_crawl,\n              releaseDate: movieData.release_date,\n            }\n          })\n        setMovies(transformedData);\n        setIsLoading(false);\n      }\n    // let movieList;\n    // if(!isLoading && movies.length > 0){\n    //   movieList = <MoviesList movies={movies} />\n    // } \n  return (\n    <React.Fragment>\n      <section>\n        <button onClick = {fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>No movies Found</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAEpC,eAAeY,WAAWA,CAAA,EAAE;IAC1BH,YAAY,CAAC,IAAI,CAAC;IAClB;IACI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;IACA;IACA;;IAEE,IAAI,CAEJ,CAAC,CAAC,OAAMC,KAAK,EAAE,CAEf;IACA,MAAMG,QAAQ,GAAI,MAAMC,KAAK,CAAE,mCAAkC,CAAC;IAClEC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE,MAAM,CAAC;IAE7B,IAAG,CAACA,QAAQ,CAACI,EAAE,EAAC;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,IAAIC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACpD,OAAM;QACJC,EAAE,EAAGD,SAAS,CAACE,UAAU;QACzBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACH,CAAC,CAAC;IACJxB,SAAS,CAACc,eAAe,CAAC;IAC1BZ,YAAY,CAAC,KAAK,CAAC;EACrB;EACF;EACA;EACA;EACA;EACF,oBACEN,OAAA,CAACJ,KAAK,CAACiC,QAAQ;IAAAC,QAAA,gBACb9B,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAQ+B,OAAO,EAAItB,WAAY;QAAAqB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACVnC,OAAA;MAAA8B,QAAA,GACG,CAACzB,SAAS,IAAIF,MAAM,CAACiC,MAAM,GAAG,CAAC,iBAAIpC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE,CAAC9B,SAAS,IAAIF,MAAM,CAACiC,MAAM,KAAK,CAAC,iBAAIpC,OAAA;QAAA8B,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC3D9B,SAAS,iBAAIL,OAAA;QAAA8B,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACjC,EAAA,CA/DQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}