{"ast":null,"code":"var _jsxFileName = \"/home/digimantra/My space/udemy-react/APIcall/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const fetchMovies = useCallback(async () => {\n    setIsLoading(true);\n    fetch('https://console.firebase.google.com/project/react-http-d3d8c/database/react-http-d3d8c-default-rtdb/data/~2F/results.json').then(function (res) {\n      if (!res.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      return res;\n    }).then(res => res.json()).then(data => {\n      const transformedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedData);\n    }).catch(error => setError(error.message));\n    setIsLoading(false);\n    /*\n      const response =  await fetch(`https://swapi.py4e.com/api/films/`);\n      console.log(response, \"data\");\n    \n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n       let data = await response.json();\n        const transformedData = data.results.map((movieData) => {\n            return{\n              id : movieData.episode_id,\n              title: movieData.title,\n              openingText: movieData.opening_crawl,\n              releaseDate: movieData.release_date,\n            }\n          })\n        setMovies(transformedData);\n        setIsLoading(false);\n    */\n  }, []);\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://console.firebase.google.com/project/react-http-d3d8c/database/react-http-d3d8c-default-rtdb/data/~2F/results.json', {\n      method: \"POST\",\n      body: \"\"\n    });\n    console.log(movie);\n  }\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this);\n  } else if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this);\n  } else if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u5eC8eH1UIbm45DLUN2I3E9ux+U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","fetch","then","res","ok","Error","json","data","transformedData","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","catch","message","addMovieHandler","movie","response","method","body","console","log","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/home/digimantra/My space/udemy-react/APIcall/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n\n  \n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const fetchMovies = useCallback( async () =>{\n    setIsLoading(true);\n    fetch('https://console.firebase.google.com/project/react-http-d3d8c/database/react-http-d3d8c-default-rtdb/data/~2F/results.json').then(\n      function(res){\n        if (!res.ok) { \n          throw new Error(\"Something went wrong!\");\n        }\n        return res;\n      }).then(\n        res => res.json()\n      ).then((data)=>{\n        const transformedData = data.results.map((movieData) => {\n          return{\n            id : movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          }\n        })\n        setMovies(transformedData);\n      }).catch(error =>  setError(error.message) );\n      \n      setIsLoading(false);\n        /*\n          const response =  await fetch(`https://swapi.py4e.com/api/films/`);\n          console.log(response, \"data\");\n        \n          if(!response.ok){\n            throw new Error('Something went wrong!');\n          }\n\n          let data = await response.json();\n            const transformedData = data.results.map((movieData) => {\n                return{\n                  id : movieData.episode_id,\n                  title: movieData.title,\n                  openingText: movieData.opening_crawl,\n                  releaseDate: movieData.release_date,\n                }\n              })\n            setMovies(transformedData);\n            setIsLoading(false);\n        */\n      }, [])\n\n      useEffect(()=>{\n        fetchMovies();\n      }, [fetchMovies]);\n\n      async function addMovieHandler(movie) {\n        const response = await fetch('https://console.firebase.google.com/project/react-http-d3d8c/database/react-http-d3d8c-default-rtdb/data/~2F/results.json', {\n          method : \"POST\",\n          body : \"\"\n        });\n        \n        console.log(movie);\n      } \n\n\n\n      let content;\n\n      if(isLoading){\n        content = <p>Loading...</p>;\n      } else if(error ) {\n        content = <p>{error}</p>\n      } else if(movies.length > 0) {\n        content = <MoviesList movies={movies}/>\n      } else {\n        content = <p>No movies Found</p>;\n      }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick = {fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}